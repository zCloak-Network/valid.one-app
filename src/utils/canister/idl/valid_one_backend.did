type UserProfile = record {
    id: nat32;
    public_key: text;
    name: text;
    avatar: text;
    bio: text;
    create_time: nat64;
    modify_time: nat64;
};

type Sign = record {
    created_by: nat32;
    sign_type: nat8;
    uuid: text;
    signature: text;
    hash: text;
    content_key: text;
    create_time: nat64;
    modify_time: nat64;
};

type SignResult = record {
    result: vec Sign;
    size: nat32;
};

service : {
    "greet": (text) -> (variant { Ok: text ; Err: text }) query;
    "map_get": (nat) -> (opt nat) query;
    "map_insert": (nat, nat) -> (opt nat);
    "user_profile_insert": (text) -> (opt UserProfile);
    "user_profile_get": (nat32) -> (opt UserProfile) query;
    user_profile_get_by_pub_key: (text) -> (opt UserProfile) query;
    "user_profile_edit": (text, text, text, text) -> (variant { Ok: text; Err: text });
    "user_current_id": () -> (nat32) query;
    // "start_register": (text, text) -> (text);
    // "finish_register": (text, text) -> (bool);
    // "start_authentication": (text) -> (text);
    // "finish_authentication": (text, text) -> (bool);
    "get_allow_credentials": (nat32) -> (opt text) query;
    "get_valid_id_by_credential": (text) -> (opt nat32) query;
    "sign_get_by_uuid": (text) -> (opt Sign) query;
    sign_get_by_signature: (text) -> (opt Sign) query;
    sign_get_by_hash: (text, opt nat32) -> (opt vec Sign) query;

    // auth_request, sign_type, hash, signature
    "sign_insert": (text, nat8, text, text) -> (variant { Ok: Sign; Err: text });

    // pageSize, pageNum
    "sign_paginate": (nat32, nat32) -> (SignResult) query;

    "start_register_new": () -> (text);
    "finish_register_new": (text) -> (nat32);
    "start_authentication_new": (nat32) -> (text);
    "finish_authentication_new": (text) -> (nat32);

    public_key : (nat32) -> (variant { Ok: record { public_key_hex: text; }; Err: text });
    sign : (nat32, text) -> (variant { Ok: record { signature_hex: text; }; Err: text });
    sign_bytes65 : (nat32, text) -> (variant { Ok: record { signature_hex: text; }; Err: text });
    verify : (text, text, text) -> (variant { Ok: record { is_signature_valid: bool; }; Err: text });
}
